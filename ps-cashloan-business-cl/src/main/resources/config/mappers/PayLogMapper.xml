<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_pay_log表:支付记录模块 -->
<mapper namespace="com.adpanshi.cashloan.cl.mapper.PayLogMapper">
    <!--返回Map-->
	<resultMap id="BaseResultMap" type="com.adpanshi.cashloan.cl.domain.PayLog">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="borrow_main_id" property="borrowMainId" jdbcType="INTEGER" /><!-- borrow_id变更为borrow_main_id @author yecy 20171214-->
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="card_no" property="cardNo" jdbcType="VARCHAR" />
		<result column="bank" property="bank" jdbcType="VARCHAR" />
		<result column="confirm_code" property="confirmCode" jdbcType="VARCHAR" />
		<result column="source" property="source" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="scenes" property="scenes" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="pay_req_time" property="payReqTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,order_no,user_id,amount,card_no,bank,confirm_code,source,type,scenes,state,remark,pay_req_time,update_time,create_time
        ,borrow_main_id
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !=null and id != ''">
                id  = #{id,jdbcType=INTEGER}
            </if>
             <if test="orderNo != null and orderNo != ''">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="borrowMainId != null and borrowMainId != ''">
                and borrow_main_id = #{borrowMainId,jdbcType=INTEGER}
            </if>
            <if test="amount != null and amount != ''">
                and amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="cardNo != null and cardNo != ''">
                and card_no = #{cardNo,jdbcType=VARCHAR}
            </if>
             <if test="bank != null and bank != ''">
                and bank = #{bank,jdbcType=VARCHAR}
            </if>
            <if test="confirmCode != null and confirmCode != ''">
                and confirm_code = #{confirmCode,jdbcType=VARCHAR}
            </if>
            <if test="source != null and source != ''">
                and source = #{source,jdbcType=VARCHAR}
            </if>
            <if test="type != null and type != ''">
                and type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="@OGNL@isNotEmpty(typeList)">
                and type IN  <foreach item="item" index="index" collection="typeList" open="(" separator="," close=")">  #{item}  </foreach>   
            </if>
            <if test="scenes != null and scenes != ''">
            	and scenes = #{scenes,jdbcType=VARCHAR}
            </if>
            <if test="state != null and state != ''">
                and state = #{state,jdbcType=VARCHAR}
            </if>
             <if test="remark != null and remark != ''">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="payReqTime !=null">
                and pay_req_time = #{payReqTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime !=null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createTime !=null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="matchOrderNo != null and matchOrderNo != ''">
                and order_no like concat("%",#{matchOrderNo,jdbcType=VARCHAR},"%")
            </if>
        </trim>
    </sql>
    
    <insert id="save" parameterType="com.adpanshi.cashloan.cl.domain.PayLog">
        insert into cl_pay_log(
        	order_no,user_id,borrow_main_id,amount,card_no,bank,confirm_code,source,type,scenes,state,remark,pay_req_time,update_time,create_time
        )values(
        	#{orderNo,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER},#{borrowMainId,jdbcType=INTEGER},#{amount,jdbcType=DECIMAL},
        	#{cardNo,jdbcType=VARCHAR},#{bank,jdbcType=VARCHAR},#{confirmCode,jdbcType=VARCHAR},#{source,jdbcType=VARCHAR},
        	#{type,jdbcType=VARCHAR},#{scenes,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},
        	#{payReqTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{createTime,jdbcType=TIMESTAMP})
    </insert>

    
    <update id="update" parameterType="com.adpanshi.cashloan.cl.domain.PayLog">
        update cl_pay_log set 
        	order_no = #{orderNo,jdbcType=VARCHAR},
            user_id = #{userId,jdbcType=INTEGER},
            borrow_main_id = #{borrowMainId,jdbcType=INTEGER},
            amount = #{amount,jdbcType=DECIMAL},
            card_no = #{cardNo,jdbcType=VARCHAR},
            bank = #{bank,jdbcType=VARCHAR},
            confirm_code = #{confirmCode,jdbcType=VARCHAR},
            source = #{source,jdbcType=VARCHAR},
            type = #{type,jdbcType=VARCHAR},
  			scenes = #{scenes,jdbcType=VARCHAR},
            state = #{state,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            pay_req_time = #{payReqTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_pay_log
          <set>
          	<if test="orderNo != nul and orderNo != ''">
          		order_no = #{orderNo,jdbcType=VARCHAR},
          	</if>
            <if test="userId != null and userId != '' ">        
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="borrowMainId != null and borrowMainId != ''">
                and borrow_main_id = #{borrowMainId,jdbcType=INTEGER}
            </if>
            <if test="amount != null and amount != '' ">        
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="cardNo != null and cardNo != '' ">        
                card_no = #{cardNo,jdbcType=VARCHAR},
            </if>
             <if test="bank != null and bank != '' ">        
                bank = #{bank,jdbcType=VARCHAR},
            </if>
              <if test="confirmCode != null and confirmCode != '' ">        
                confirm_code = #{confirmCode,jdbcType=VARCHAR},
            </if>
            <if test="source != null and source != '' ">        
                source = #{source,jdbcType=VARCHAR},
            </if>
            <if test="type != null and type != '' ">        
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="scenes != null and scenes != ''">
            	scenes = #{scenes,jdbcType=VARCHAR},
            </if>
            <if test="state != null and state != '' ">        
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != '' ">        
                remark = #{remark,jdbcType=VARCHAR},
            </if>
             <if test="payReqTime != null ">        
                pay_req_time = #{payReqTime,jdbcType=TIMESTAMP},
            </if>
             <if test="updateTime != null ">        
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null ">        
                create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>

    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_pay_log
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_pay_log
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_pay_log
        <include refid="searchBy"/>
        ORDER BY id DESC
    </select>

	<!-- 分页查询 -->
	<select id="page" resultType="com.adpanshi.cashloan.cl.model.ManagePayLogModel" parameterType="java.util.HashMap">
		select 
			payLog.id,payLog.order_no,borrow.order_no as borrowOrderNo,borrow.state as borrowState,payLog.borrow_main_id,payLog.amount,
			payLog.card_no,payLog.bank,payLog.source,payLog.type,payLog.scenes,payLog.state,payLog.remark,payLog.pay_req_time,
			payLog.update_time,payLog.create_time,borrow.create_time as loanTime,user.login_name,baseInfo.real_name,baseInfo.phone
		from 
			cl_pay_log payLog
        <!-- left join cl_borrow borrow on payLog.borrow_id  = borrow.id -->
        <!-- borrow表记录被删除，或状态不为20,26，不查询记录 @author yecy 20171128-->
        left join cl_borrow_main borrow on payLog.borrow_main_id  = borrow.id
		left join cl_user user on payLog.user_id = user.id
		left join cl_user_base_info baseInfo on payLog.user_id = baseInfo.user_id 
		<trim prefix="where" prefixOverrides="and|or">
            <if test="isVerify != null and isVerify">
                borrow.`state` in ('20','26')
            </if>
            <if test="realName != null and realName !=''">
                and baseInfo.real_name like concat("%",#{realName,jdbcType=VARCHAR},"%") 
            </if>
             <if test="phone !=null and phone !=''">
                and baseInfo.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%") 
            </if>
            <if test="type !=null and type.size > 0">
               	and payLog.type in 
            	<foreach item="item" index="index" collection="type" open="(" separator="," close=")">  
					#{item}  
				</foreach>  
            </if>
            <if test="scenes !=null and scenes !='' ">
				and payLog.scenes = #{scenes,jdbcType=VARCHAR}            
            </if>
            <if test="state !=null and state !=''">
            	and payLog.state = #{state,jdbcType=VARCHAR}
            </if>
            <!--start zy-->
            <!--<if test="startTime != null">
                and payLog.create_time &gt; #{startTime,jdbcType=TIMESTAMP}
            </if>-->
            <if test="startTime  != null">
                <![CDATA[
                     AND payLog.create_time >= CONCAT(#{startTime},' 00:00:00')
                 ]]>
            </if>
            <if test="endTime  != null">
                <![CDATA[
                     AND payLog.create_time <= CONCAT(#{endTime},' 23:59:59')
                 ]]>
            </if>
            <!--<if test="endTime  != null">
                and payLog.create_time &lt; #{endTime,jdbcType=TIMESTAMP}
            </if>-->
            <!--end-->
        </trim>
        order by payLog.id desc
        <if test="totalCount !='' and totalCount !=null">
            limit #{totalCount,jdbcType = BIGINT}
        </if>
	</select>

	<!-- 查询详情 -->
	<select id="findDetail" resultType="com.adpanshi.cashloan.cl.model.ManagePayLogModel" parameterType="java.lang.Long">
		select 
			payLog.id,payLog.order_no,borrow.order_no as borrowOrderNo,borrow.state as
			borrowState,payLog.borrow_main_id,payLog.amount,
			payLog.card_no,payLog.bank,payLog.source,payLog.type,payLog.scenes,payLog.state,payLog.remark,payLog.pay_req_time,
			payLog.update_time,payLog.create_time,borrow.create_time as loanTime,user.login_name,baseInfo.real_name,baseInfo.phone
		from 
			cl_pay_log payLog
		left join cl_borrow_main borrow on payLog.borrow_main_id  = borrow.id
		left join cl_user user on payLog.user_id = user.id
		left join cl_user_base_info baseInfo on payLog.user_id = baseInfo.user_id 
		where payLog.id = #{id ,jdbcType=INTEGER}
	</select>

	<!-- 更新状态 校验订单状态 -->
	<update id="updateState" parameterType="java.util.HashMap">
		update cl_pay_log
		<set>
			<if test="state != null and state != '' ">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="remark != null and remark != '' ">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="payReqTime != null ">
				pay_req_time = #{payReqTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null ">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id ,jdbcType=INTEGER} and state = #{originalState,jdbcType=INTEGER}
	</update>
	
	<!--  对账list查询  -->
	<select id="findCheckList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select
        <include refid="Base_Column_List" />
        from cl_pay_log
        <trim prefix="where" prefixOverrides="and|or">
        	<if test="orderNo != null and orderNo != ''">
           		and order_no = #{orderNo,jdbcType=VARCHAR}
           	</if>
           	<if test="type != null and type !='' ">
            	and type = #{type,jdbcType=VARCHAR}
            </if>
			<if test="startTime != null">
                and create_time &gt; #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime  != null">
                and create_time &lt; #{endTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
	</select>
	
	<select id="findSelectiveOne" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_pay_log
        <include refid="searchBy"/>
         order by id desc limit 1
    </select>
	
	<!-- 查询最近一笔订单支付记录 -->
	<select id="getPayLogByLateOrderNo" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select  t.*
        from cl_pay_log t INNER JOIN cl_borrow_main cb ON t.borrow_main_id=cb.id AND cb.order_no =#{orderNo}
        WHERE 1=1 
         <if test="userId != null and userId != ''">
             and t.user_id = #{userId,jdbcType=INTEGER}
         </if>
         <if test="borrowMainId != null and borrowMainId != ''">
             and t.borrow_main_id = #{borrowMainId,jdbcType=INTEGER}
         </if>
         <if test="source != null and source != ''">
             and t.source = #{source,jdbcType=VARCHAR}
         </if>
         <if test="type != null and type != ''">
             and t.type = #{type,jdbcType=VARCHAR}
         </if>
         <if test="scenes != null and scenes != ''">
         	 and t.scenes = #{scenes,jdbcType=VARCHAR}
         </if>
         <if test="state != null and state != ''">
             and t.state = #{state,jdbcType=VARCHAR}
         </if>
         order by t.update_time desc limit 1
    </select>
    
     <!--  根据orderNo、borrowId查找最近的一条支付记录 -->
	<select id="findPayLogByLastOrderNoWithBorrowId" resultMap="BaseResultMap">
        select  <include refid="Base_Column_List" />
        from cl_pay_log 
        WHERE 1=1  AND order_no= #{orderNo,jdbcType=VARCHAR}
         <if test="borrowMainId != null and borrowMainId != ''">
             AND borrow_main_id = #{borrowMainId}
         </if>
         order by create_time desc limit 1
    </select>
	
	<!--  根据订单号查询支付状态不是支付成功的首笔支付订单 -->
	<select id="getPayLogByFirstOrderNo" resultMap="BaseResultMap">
        select  t.* from cl_pay_log t
        WHERE 1=1  AND t.order_no= #{orderNo,jdbcType=VARCHAR} 
         AND NOT EXISTS (SELECT tmp.order_no FROM cl_pay_log tmp WHERE tmp.state =40 AND t.order_no=tmp.order_no)
         order by t.pay_req_time ASC limit 1
    </select>
</mapper>
