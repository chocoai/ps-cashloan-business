<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_borrow_repay表:还款计划模块 -->
<mapper namespace="com.adpanshi.cashloan.cl.mapper.BorrowRepayMapper">
    <!--返回Map-->
    <resultMap id="BaseResultMap" type="com.adpanshi.cashloan.cl.domain.BorrowRepay">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="repay_time" property="repayTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
        <result column="penalty_day" property="penaltyDay" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="BorrowRepayModel" extends="BaseResultMap" type="com.adpanshi.cashloan.cl.model.BorrowRepayModel" >
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="borrow_amount" property="borrowAmount" jdbcType="DECIMAL" />
        <result column="repay_amount" property="repayAmount" jdbcType="DECIMAL" />
        <result column="repay_total" property="repayTotal" jdbcType="DECIMAL" />
        <result column="repay_plan_time" property="repayPlanTime" jdbcType="TIMESTAMP" />
        <result column="repayTimeStr" property="repayTimeStr" jdbcType="TIMESTAMP" />
        <result column="id_no" property="idNo" jdbcType="VARCHAR" />
        <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
        <result column="confirm_name" property="confirmName" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

	<resultMap type="com.adpanshi.cashloan.cl.model.StaginRepayMode" id="StaginRepayMap">
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="interests" property="interests" jdbcType="DECIMAL" />
		<result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
		<result column="fee" property="fee" jdbcType="DECIMAL" />
	</resultMap>

    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,user_id,borrow_id,amount,repay_time,state,penalty_amout,penalty_day
    </sql>

    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !='' and id !=null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId !='' and userId !=null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="borrowId !='' and borrowId !=null">
                and borrow_id = #{borrowId,jdbcType=BIGINT}
            </if>
            <if test="amount !='' and amount !=null">
                and amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="repayTime !=null">
                and repay_time = #{repayTime,jdbcType=TIMESTAMP}
            </if>
            <if test="state !='' and state !=null">
                and state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="penaltyAmout !='' and penaltyAmout !=null">
                and penalty_amout = #{penaltyAmout,jdbcType=DECIMAL}
            </if>
            <if test="penaltyDay !='' and penaltyDay !=null">
                and penalty_day = #{penaltyDay,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>


    <insert id="save" parameterType="com.adpanshi.cashloan.cl.domain.BorrowRepay">
        insert into cl_borrow_repay(user_id,borrow_id,amount,repay_time,state,penalty_amout,penalty_day)
        SELECT #{userId,jdbcType=BIGINT},#{borrowId,jdbcType=BIGINT},#{amount,jdbcType=DECIMAL},#{repayTime,jdbcType=TIMESTAMP},
        #{state,jdbcType=VARCHAR},#{penaltyAmout,jdbcType=DECIMAL},#{penaltyDay,jdbcType=VARCHAR} FROM DUAL
        where not exists(select id from cl_borrow_repay where borrow_id = #{borrowId,jdbcType=BIGINT})
    </insert>


    <update id="updateParam"  parameterType="java.util.HashMap">
        update cl_borrow_repay
          <set>
            state = #{state,jdbcType=VARCHAR} ,
            <if test="penaltyDay !=null and penaltyDay != ''">
           		penalty_day = #{penaltyDay,jdbcType=VARCHAR},
            </if>
            <if test="penaltyAmout !=null">
            	penalty_amout = #{penaltyAmout,jdbcType=DECIMAL} ,
            </if>
            <if test="repayTime != null ">
            	repay_time = #{repayTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where state = '20' and id = #{id ,jdbcType=BIGINT}
    </update>

    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_borrow_repay
          <set>
            <if test="userId != null and userId != '' ">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="borrowId != null and borrowId != '' ">
                borrow_id = #{borrowId,jdbcType=BIGINT},
            </if>
            <if test="amount != null and amount != '' ">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR} ,
            </if>
            <if test="penaltyAmout != null and penaltyAmout != '' ">
                penalty_amout = #{penaltyAmout,jdbcType=DECIMAL} ,
            </if>
            <if test="penaltyDay !='' and penaltyDay !=null">
                 penalty_day = #{penaltyDay,jdbcType=VARCHAR},
            </if>
             <if test="repayTime != null ">
                repay_time = #{repayTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where id = #{id ,jdbcType=BIGINT}
    </update>


    <update id="updateByBorrowId"  parameterType="java.util.HashMap">
        update cl_borrow_repay
          <set>
            <if test="userId != null and userId != '' ">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="amount != null and amount != '' ">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="repayTime != null ">
                repay_time = #{repayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR}
            </if>
        </set>
        where borrow_id = #{borrowId ,jdbcType=BIGINT}
    </update>

    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_borrow_repay
        where id = #{id,jdbcType=BIGINT}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow_repay
        <include refid="searchBy"/>
    </select>

    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow_repay
        <include refid="searchBy"/>
    </select>


    <select id="listSelModel" resultMap="BorrowRepayModel" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow_repay
        <include refid="searchBy"/>
    </select>

    <resultMap id="userBorrowRayMap"  extends="BaseResultMap" type="com.adpanshi.cashloan.cl.model.ManageBRepayModel">
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="borrow_amount" property="borrowAmount" jdbcType="DECIMAL" />
        <result column="repay_amount" property="repayAmount" jdbcType="DECIMAL" />
        <result column="borrow_time" property="borrowTime" jdbcType="TIMESTAMP" />
        <result column="id_no" property="idNo" jdbcType="VARCHAR" />
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
        <result column="real_amout" property="realAmout" jdbcType="DECIMAL" />
        <result column="real_penalty_amout" property="realPenaltyAmout" jdbcType="DECIMAL" />
        <result column="borrow_state" property="borrowState" jdbcType="VARCHAR" />
        <result column="repay_way" property="repayWay" jdbcType="VARCHAR" />
        <result column="repay_account" property="repayAccount" jdbcType="VARCHAR" />
        <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
        <result column="phase" property="phase" jdbcType="INTEGER" />
    </resultMap>
    <!-- 用户借款sql查询条件公共引用 -->
    <sql id="searchModelBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="realName !='' and realName !=null">
                  u.real_name   like  concat("%",#{realName,jdbcType=VARCHAR},"%")
            </if>
             <if test="phone !='' and phone !=null">
                and u.phone  like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            <if test="serialNumber !='' and serialNumber !=null">
                and INSTR(l.serial_number,#{serialNumber,jdbcType=VARCHAR})
            </if>
            <if test="repayAccount !='' and repayAccount !=null">
                and INSTR(l.repay_account,#{repayAccount,jdbcType=VARCHAR})
            </if>
            <if test="borrowMainId != null and borrowMainId != '' ">
                and b.borrow_main_id = #{borrowMainId,jdbcType=INTEGER}
            </if>
            <if test="state != null and state != '' ">
                and b.state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="repayState != null and repayState != '' ">
                and r.state = #{repayState,jdbcType=VARCHAR}
            </if>
            <if test="repayWay != null and repayWay != '' ">
                and l.repay_way = #{repayWay,jdbcType=VARCHAR}
            </if>
            <if test="auditName != null and auditName != '' ">
                and b.audit_name like  concat("%",#{auditName,jdbcType=VARCHAR},"%")
            </if>
            <if test="startTime != null">
                and DATE_FORMAT(r.repay_time,'%Y-%m-%d')  &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime  != null">
                and DATE_FORMAT(r.repay_time,'%Y-%m-%d')  &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="realityStartTime   != null">
                and DATE_FORMAT(l.repay_time,'%Y-%m-%d')  &gt;= #{realityStartTime,jdbcType=TIMESTAMP}
            </if>
            <if test="realityEndTime    != null">
                and DATE_FORMAT(l.repay_time,'%Y-%m-%d')  &lt;= #{realityEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="startAuditTime   != null">
                and b.audit_time &gt;= #{startAuditTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endAuditTime    != null">
                and b.audit_time  &lt;= #{endAuditTime,jdbcType=TIMESTAMP}
            </if>
            <if test="timeLimit != null and timeLimit !=''">
                and b.time_limit = #{timeLimit}
            </if>
            <!--end-->
        </trim>
    </sql>
     <select id="listModel" resultMap="userBorrowRayMap" parameterType="java.util.HashMap">
         select * from (
         select
         r.id,r.user_id,r.borrow_id/*old*/,u.real_name/*真实姓名old*/,u.phone/*手机号old*/,u.id_no/*，身份证号old*/,b.order_no/*订单号old*/,b.create_time
         as borrow_time/*订单生成时间old*/,r.penalty_day/*逾期天数old*/,
         r.state/*还款状态 old*/,r.amount as repay_amount/*应还款金额(元)old*/,r.penalty_amout /*应还逾期罚金(元)old*/,
         l.amount as real_amout/*已还款金额(元)new*/,l.penalty_amout as real_penalty_amout /*已还逾期罚金(元)new*/,r.repay_time as
         repay_plan_time/*应还款日期old*/,b.audit_name/*审核人old*/,b.audit_time/*old*/,
         l.repay_time/*实际还款日期old*/,b.state as borrow_state/*订单状态new*/,l.repay_way/*还款方式new*/,l.repay_account/*还款账号new*/,l.serial_number/*流水号new*/,
         CASE INSTR(b.order_no,'X') WHEN 0 THEN 1 ELSE 0+SUBSTR(b.order_no,INSTR(b.order_no,'X')+1) END as phase/*期数new*/
         FROM cl_borrow_repay r
         LEFT JOIN cl_user_base_info u ON r.user_id = u.user_id
         LEFT JOIN cl_borrow b ON r.borrow_id = b.id
         LEFT JOIN cl_borrow_repay_log l ON l.repay_id = r.id
         <include refid="searchModelBy"/>
         ORDER BY r.id DESC
         <if test="totalCount !='' and totalCount !=null">
             limit #{totalCount,jdbcType = BIGINT}
         </if>
         )borrow_repay_info
         <if test="phase !='' and phase !=null">
            where phase = #{phase,jdbcType = BIGINT}
         </if>
    </select>

	  <resultMap id="userBorrowMap"  extends="BaseResultMap" type="com.adpanshi.cashloan.rule.model.ManageBorrowModel">
	    <result column="real_name" property="realName" jdbcType="VARCHAR" />
	    <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="repay_amount" property="repayAmount" jdbcType="DECIMAL" />
        <result column="repay_time" property="repayTime" jdbcType="VARCHAR" />
        <result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
        <result column="penalty_day" property="penaltyDay" jdbcType="VARCHAR" />
        <result column="time_limit" property="timeLimit" jdbcType="VARCHAR" />
        <result column="phase" property="phase" jdbcType="INTEGER" />
	  </resultMap>


    <sql id="searchPayModelBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="realName !='' and realName !=null">
                  u.real_name   like  concat("%",#{realName,jdbcType=VARCHAR},"%")
            </if>
             <if test="phone !='' and phone !=null">
                and u.phone  like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            <if test="stateList !='' and stateList !=null">
                 and b.state  in
	             <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
				      #{item}
	             </foreach>
            </if>

        </trim>
    </sql>

     <select id="listRepayModel" resultMap="userBorrowMap" parameterType="java.util.HashMap">
        select  u.real_name,u.phone,
        b.order_no,b.amount ,b.fee,b.time_limit,b.state,b.service_fee,b.info_auth_fee,b.interest,b.create_time,
        r.id,r.amount  as repay_amount,r.repay_time,r.penalty_amout,r.penalty_day
        from  cl_borrow b  left join  cl_user_base_info u on  u.user_id=b.user_id  join cl_borrow_repay r on r.borrow_id=b.id
        <include refid="searchPayModelBy"/>
        ORDER BY r.repay_time DESC
    </select>

    <update id="updateLate" parameterType="com.adpanshi.cashloan.cl.domain.BorrowRepay">
        update cl_borrow_repay set
        penalty_amout = #{penaltyAmout},
        penalty_day = #{penaltyDay}
        where id = #{id ,jdbcType=BIGINT}
    </update>

        <sql id="searchUrgeBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="state !='' and state !=null">
                and b.state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="realName !='' and realName !=null">
                 and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
            </if>
             <if test="phone !='' and phone !=null">
                and u.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            and b.id not in (select borrow_id from cl_urge_repay_order)
        </trim>
    </sql>

     <select id="listModelNotUrge" resultMap="userBorrowMap" parameterType="java.util.HashMap">
        select  u.real_name,u.phone,
        b.id,b.order_no,b.amount ,b.fee,b.time_limit,b.state,b.service_fee,b.info_auth_fee,b.interest,b.create_time,
        r.amount  as repay_amount,r.repay_time,r.penalty_amout,r.penalty_day,r.borrow_id,
        CASE INSTR(b.order_no,'X') WHEN 0 THEN 1 ELSE 0+SUBSTR(b.order_no,INSTR(b.order_no,'X')+1) END as phase/*期数new*/
        from  cl_borrow b  left join  cl_user_base_info u on  u.user_id=b.user_id  join cl_borrow_repay r on r.borrow_id=b.id
        <include refid="searchUrgeBy"/>
        ORDER BY b.create_time DESC
    </select>

	<!-- 查询未还款借款项目 borrowState 30:放款成功  50:逾期  90:坏账 -->
	<select id="findUnRepay" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select
			repay.id,repay.user_id,repay.borrow_id,repay.amount,repay.repay_time,repay.state,repay.penalty_amout,repay.penalty_day
		from cl_borrow_repay repay left join cl_borrow borrow on repay.`borrow_id` = borrow.id
		where  borrow.`state` in (30,50,90)
		<if test="repayTime != null ">
			and repay.repay_time &lt; #{repayTime,jdbcType=TIMESTAMP}
		</if>
		<if test="state !=null and state != ''">
			and repay.state = #{state,jdbcType = VARCHAR}
		</if>
		<if test="userId !=null">
			and repay.user_id = #{userId,jdbcType = BIGINT}
		</if>
        ORDER BY repay_time ASC
	</select>

    <!-- 查询某个人是否成功还款过-->
    <select id="findRepayWithUser" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            repay.id,repay.user_id,repay.borrow_id,repay.amount,repay.repay_time,repay.state,repay.penalty_amout,repay.penalty_day
        from cl_borrow_repay repay  where state=10
        and repay.user_id = #{userId,jdbcType = BIGINT} order by repay.repay_time desc
    </select>

    <select id="findOverdue" resultMap="BorrowRepayModel" parameterType="java.lang.Long">
        SELECT cb.create_time,cb.amount,cbr.repay_time,cbr.penalty_day,cbr.penalty_amout,cb.order_no,
        (SELECT login_name FROM cl_user WHERE id = cb.user_id) AS phone,
				(SELECT real_name FROM cl_user_base_info WHERE user_id = cb.user_id) AS realName
		FROM cl_borrow_repay AS cbr LEFT JOIN cl_borrow AS cb ON cbr.borrow_id = cb.id
		WHERE cb.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findOverdueByOrderNo" resultMap="BorrowRepayModel" parameterType="java.lang.String">
        SELECT cb.create_time,cb.amount,cbr.repay_time,cbr.penalty_day,cbr.penalty_amout,cb.order_no
        (SELECT login_name FROM cl_user WHERE id = cb.user_id) AS phone,
        (SELECT real_name FROM cl_user_base_info WHERE user_id = cb.user_id) AS realName
        FROM cl_borrow_repay AS cbr LEFT JOIN cl_borrow AS cb ON cbr.borrow_id = cb.id
        WHERE cb.order_no = #{orderNo,jdbcType=VARCHAR}
    </select>

    <insert id="saveAll" parameterType="com.adpanshi.cashloan.cl.domain.BorrowRepay">
        insert into cl_borrow_repay(user_id,borrow_id,amount,repay_time,state,penalty_amout,penalty_day) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId,jdbcType=BIGINT},
            #{item.borrowId,jdbcType=BIGINT},
            #{item.amount,jdbcType=DECIMAL},
            #{item.repayTime,jdbcType=TIMESTAMP},
            #{item.state,jdbcType=VARCHAR},
            #{item.penaltyAmout,jdbcType=DECIMAL},
            #{item.penaltyDay,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <!-- 根据给定userId及borrowMainId统计用户分期还款明细 -->
    <select id="getStaginRepayDetail" resultMap="StaginRepayMap" parameterType="java.util.Map">
		SELECT SUM(borrow.amount) AS amount,(IFNULL(SUM(borrow.fee),0)-IFNULL(SUM(repayLog.fee),0)) AS interests,IFNULL(SUM(t.penalty_amout),0) AS penaltyAmout,IFNULL(SUM(repayLog.fee),0) AS fee
			FROM cl_borrow_repay t
			LEFT JOIN cl_borrow_repay_log repayLog ON t.borrow_id=repayLog.borrow_id AND t.user_id=repayLog.user_id
			LEFT JOIN cl_borrow  borrow ON t.borrow_id=borrow.id AND borrow.user_id=t.user_id
		 WHERE t.state=10 AND EXISTS (
					SELECT m.id FROM cl_borrow_main m WHERE m.id=borrow.borrow_main_id AND m.id=#{borMainId} AND m.user_id=#{userId} 
			)GROUP BY t.state
	</select>

	<!-- 根据给定订单主键id列表、userId、状态(可选)、查询订单 -->
	<select id="queryBorrowRepayByIdsWithUserIdState" resultMap="BaseResultMap">
		SELECT * FROM cl_borrow_repay  WHERE user_id=#{userId} AND borrow_id IN
		  <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
   		  		#{item}
   		  </foreach>
   		  <if test="@OGNL@isNotEmpty(state)">
   		  		AND state=#{state}
   		  </if>
	</select>
	
	<!-- 根据给定订单号列表、userId、状态(可选)、查询订单 -->
	<select id="queryBorrowRepayByOrderNosWithUserIdState" resultMap="BaseResultMap">
		SELECT repay.* FROM cl_borrow_repay repay WHERE repay.user_id=#{userId} AND repay.borrow_id IN(
				SELECT t.id FROM cl_borrow t WHERE t.order_no IN
				<foreach item="item" index="index" collection="borrowOrderNos" open="(" separator="," close=")">
					#{item}
				</foreach>
		)
		<if test="@OGNL@isNotEmpty(state)">  AND repay.state=#{state} </if>
	</select>
	
	<!-- 根据主订单id查询还款计划 -->
	<select id="queryBorrowRepayByBorMainId" resultMap="BaseResultMap">
		SELECT t.* FROM cl_borrow_repay t WHERE t.borrow_id IN(
			SELECT borw.id FROM cl_borrow borw WHERE  borw.borrow_main_id=(SELECT main.id FROM cl_borrow_main main WHERE main.id=#{borMainId})
		 ) ORDER BY t.repay_time ASC
	</select>

    <!-- 还款计划查询-->
    <select id="listModelNew" resultMap="BorrowRepayModel" parameterType="java.util.Map">
        select br.id,cu.real_name,cu.phone,cu.id_no,cb.order_no,cb.amount borrow_amount,br.penalty_amout,br.penalty_day,cb.create_time,
            br.amount repay_amount,br.penalty_amout+br.amount repay_total,br.repay_time repay_plan_time,brl.repay_time repayTime,brl.confirm_time,
            su.name confirm_name,br.state
        from cl_borrow_repay br
        left join cl_borrow_repay_log brl on br.id = brl.repay_id
        left join  cl_user_base_info cu on br.user_id = cu.user_id
        left join arc_sys_user su on brl.confirm_id = su.id
        left join cl_borrow cb on cb.id = br.borrow_id

        <trim prefix="where" prefixOverrides="and|or">
            <if test="realName !='' and realName !=null">
                cu.real_name   like  concat("%",#{realName,jdbcType=VARCHAR},"%")
            </if>
            <if test="phone !='' and phone !=null">
                and cu.phone  like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and cb.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            <if test="state != null and state != '' ">
                and br.state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                and DATE_FORMAT(br.repay_time,'%Y-%m-%d')  &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime  != null">
                and DATE_FORMAT(br.repay_time,'%Y-%m-%d')  &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>
            <!--<if test="realityStartTime   != null">-->
                <!--and DATE_FORMAT(l.repay_time,'%Y-%m-%d')  &gt;= #{realityStartTime,jdbcType=TIMESTAMP}-->
            <!--</if>-->
            <!--<if test="realityEndTime    != null">-->
                <!--and DATE_FORMAT(l.repay_time,'%Y-%m-%d')  &lt;= #{realityEndTime,jdbcType=TIMESTAMP}-->
            <!--</if>-->
            <!--<if test="startAuditTime   != null">-->
                <!--and b.audit_time &gt;= #{startAuditTime,jdbcType=TIMESTAMP}-->
            <!--</if>-->
            <!--<if test="endAuditTime    != null">-->
                <!--and b.audit_time  &lt;= #{endAuditTime,jdbcType=TIMESTAMP}-->
            <!--</if>-->
            <if test="startPenaltyDay != null and startPenaltyDay !=''">
                and br.penalty_day &gt;= #{startPenaltyDay}
            </if>
            <if test="endPenaltyDay != null and endPenaltyDay !=''">
                and br.penalty_day &lt;= #{endPenaltyDay}
            </if>
            <!--end-->
        </trim>
    </select>

</mapper>
