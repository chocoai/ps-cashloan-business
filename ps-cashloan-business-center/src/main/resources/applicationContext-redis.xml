<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd"
	    >
	<!-- 开启注解 -->
	<context:component-scan base-package="com.adpanshi.cashloan.core.common.*" />

	<!--加载redis配置信息 用于redisson  -->
	<bean id="redisConfig" class="com.adpanshi.cashloan.core.common.cache.RedisConfig">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>
	<!-- 适合集群、可以连接主从rebdis服务 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" 		value="${redis.maxtotal}"/>
        <property name="maxIdle" 	    value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis"  value="${redis.maxwaitmillis}"/>
        <property name="testOnBorrow"   value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn"   value="${redis.testonreturn}"/>
    </bean>
    
     <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}" />
        <property name="port" value="${redis.port}" />
		 <property name="password" value="${redis.password}" />
        <property name="database" value="${redis.database}" />
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true" />
    </bean> 
    
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>	
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">  
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	    </property>
	    <property name="hashValueSerializer">
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	    </property>
	</bean>
    
    
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="poolConfig" ref="jedisPoolConfig" />
		<constructor-arg name="host" value="${redis.ip}" />
		<constructor-arg name="port" value="${redis.port}" />
		<constructor-arg name="password" value="${redis.password}" />
		<constructor-arg name="database" value="${redis.database}" />
		<constructor-arg name="timeout" value="${redis.maxwaitmillis}" />
	</bean>

</beans>