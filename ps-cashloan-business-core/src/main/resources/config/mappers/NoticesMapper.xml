<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_notices表:消息表模块 -->
<mapper namespace="com.adpanshi.cashloan.core.mapper.NoticesMapper">
    <!--返回Map-->        
    <resultMap id="NoticesMap" type="com.adpanshi.cashloan.core.domain.Notices">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
        <result column="stop_date" property="stopDate" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        `id`,`user_id`,`title`,`url`,`content`,`type`,`create_time`,`start_date`,`stop_date`,`state`
    </sql>

    <insert id="save" parameterType="com.adpanshi.cashloan.core.domain.Notices"  keyProperty="id" useGeneratedKeys="true">
        insert into cl_notices(
          `user_id`,
          `title`,
          `url`,
          `content`,
          `type`,
          `create_time`,
          `start_date`,
          `stop_date`,
          `state`
        )values(
          #{userId,jdbcType=BIGINT},
          #{title,jdbcType=VARCHAR},
          #{url,jdbcType=VARCHAR},
          #{content,jdbcType=VARCHAR},
          #{type,jdbcType=VARCHAR},
          #{createTime,jdbcType=TIMESTAMP},
          #{startDate,jdbcType=TIMESTAMP},
          #{stopDate,jdbcType=TIMESTAMP},
          #{state,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.adpanshi.cashloan.core.domain.Notices">
        update cl_notices
        <set>
            <if test="title != null and title != '' ">
                `title` = #{title,jdbcType=VARCHAR},
            </if>
            <if test="url != null and url != '' ">
                `url` = #{url,jdbcType=VARCHAR},
            </if>
            <if test="content != null and content != '' ">
                `content` = #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null and type != '' ">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="state != null and state != '' ">
                `state` = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startDate != null">
                `start_date` = #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="stopDate != null">
                `stop_date` = #{stopDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id ,jdbcType=INTEGER}
    </update>

    <select id="listSelective" resultMap="NoticesMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_notices
        where
        (
            user_id=-1
            <if test="userId != null and userId != '' ">
                or user_id = #{userId,jdbcType=BIGINT}
            </if>
        )
        <if test="type !=null and type != '' ">
            AND `type` = #{type,jdbcType=VARCHAR}
        </if>
        <if test="title != null and title != ''">
            AND `title` like concat("%",#{title,jdbcType=VARCHAR},"%")
        </if>
        order by create_time desc
    </select>

    <select id="findByPrimary" resultMap="NoticesMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_notices
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 活动信息未读begin -->
    <select id="queryNoticesReadState"  resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(create_time)
        from cl_notices
        where  state='10'
        <if test="time != null">
            AND create_time &gt;= #{time,jdbcType=TIMESTAMP}
        </if>
        and (
            user_id=-1
            <if test="userId != null and userId != '' ">
                or user_id = #{userId,jdbcType=BIGINT}
            </if>
        )
        order by create_time desc
    </select>

</mapper>
