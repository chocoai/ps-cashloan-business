<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_borrow表:借款信息表模块 -->
<mapper namespace="com.adpanshi.cashloan.com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.mapper.ClBorrowMapper">
    <!--返回Map-->
    <resultMap id="BaseResultMap" type="com.adpanshi.cashloan.com.adpanshi.cashloan.api.core.domain.Borrow">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="time_limit" property="timeLimit" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="card_id" property="cardId" jdbcType="BIGINT" />
        <result column="service_fee" property="serviceFee" jdbcType="DECIMAL" />
        <result column="info_auth_fee" property="infoAuthFee" jdbcType="DECIMAL" />
        <result column="interest" property="interest" jdbcType="DECIMAL" />
        <result column="client" property="client" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="coordinate" property="coordinate" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="audit_process" property="auditProcess" jdbcType="INTEGER" />
		<result column="audit_process_time" property="auditProcessTime" jdbcType="TIMESTAMP" />
        <result column="audit_name" property="auditName" jdbcType="VARCHAR" /><!--zy-->
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
        <!-- 主借款记录id @author yecy 20171208 -->
        <result column="borrow_main_id" property="borrowMainId" jdbcType="BIGINT" />
    </resultMap>

    <resultMap id="RepaymentMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.StaginRepaymentModel">
        <result column="createTime" property="createTime" jdbcType="VARCHAR" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="interests" property="interests" jdbcType="DECIMAL" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="repay_way" property="repayWay" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
    </resultMap>

    <!-- 分期还款计划列表 -->
    <resultMap id="StaginRepaymentPlanMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.StaginRepaymentPlanModel">
        <result column="repay_time" property="repayTime" jdbcType="VARCHAR" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="interests" property="interests" jdbcType="DECIMAL" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
        <result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
        <result column="bank" property="bank" jdbcType="VARCHAR" />
        <result column="cardNo" property="cardNo" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,user_id,order_no,amount,real_amount,fee,create_time,time_limit,state,card_id,service_fee,info_auth_fee,interest,client,address,coordinate,remark,ip,audit_process,audit_process_time,audit_name/*zy*/
        ,borrow_main_id<!-- @author yecy 20171208 -->
    </sql>

    <resultMap id="IndexModel" extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.IndexModel">

    </resultMap>

    <resultMap id="ClBorrowModel" extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.ClBorrowModel">

    </resultMap>

    <resultMap id="repayModel" extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.RepayModel">

    </resultMap>

    <resultMap id="ManageBorrowTestModel" extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.ManageBorrowTestModel">

    </resultMap>

    <resultMap id="ManageBorrowExportModel" extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.ManageBorrowExportModel">

    </resultMap>

    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !='' and id !=null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId !='' and userId !=null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="amount !='' and amount !=null">
                and amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="realAmount !='' and realAmount !=null">
                and real_amount = #{realAmount,jdbcType=DECIMAL}
            </if>
            <if test="fee !='' and fee !=null">
                and fee = #{fee,jdbcType=DECIMAL}
            </if>
            <if test="createTime !=null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="timeLimit !='' and timeLimit !=null">
                and time_limit = #{timeLimit,jdbcType=VARCHAR}
            </if>
            <if test="state !='' and state !=null">
                and state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="cardId !='' and cardId !=null">
                and card_id = #{cardId,jdbcType=BIGINT}
            </if>
            <if test="serviceFee !='' and serviceFee !=null">
                and service_fee = #{serviceFee,jdbcType=DECIMAL}
            </if>
            <if test="infoAuthFee !='' and infoAuthFee !=null">
                and info_auth_fee = #{infoAuthFee,jdbcType=DECIMAL}
            </if>
            <if test="interest !='' and interest !=null">
                and interest = #{interest,jdbcType=DECIMAL}
            </if>
            <if test="client !='' and client !=null">
                and client = #{client,jdbcType=VARCHAR}
            </if>
            <if test="address !='' and address !=null">
                and address = #{address,jdbcType=VARCHAR}
            </if>
            <if test="coordinate !='' and coordinate !=null">
                and coordinate = #{coordinate,jdbcType=VARCHAR}
            </if>
            <if test="remark !=null and remark != ''">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
             <if test="ip !=null and ip != ''">
                and ip = #{ip,jdbcType=VARCHAR}
            </if>
            <if test="borrowMainId !='' and borrowMainId !=null">
                and borrow_main_id = #{borrowMainId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>


    <insert id="save" parameterType="com.adpanshi.cashloan.com.adpanshi.cashloan.api.core.domain.Borrow" keyProperty="id" useGeneratedKeys="true">
        insert into
        cl_borrow(user_id,order_no,amount,real_amount,fee,create_time,time_limit,state,card_id,service_fee,info_auth_fee,interest,client,address,coordinate,remark,ip,borrow_main_id)
        SELECT #{userId,jdbcType=BIGINT},#{orderNo,jdbcType=VARCHAR},#{amount,jdbcType=DECIMAL},#{realAmount,jdbcType=DECIMAL},#{fee,jdbcType=DECIMAL},#{createTime,jdbcType=TIMESTAMP},
        #{timeLimit,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{cardId,jdbcType=BIGINT},#{serviceFee,jdbcType=DECIMAL},#{infoAuthFee,jdbcType=DECIMAL},#{interest,jdbcType=DECIMAL},
        #{client,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{coordinate,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{ip,jdbcType=VARCHAR},#{borrowMainId,jdbcType=BIGINT}  FROM DUAL
        where not exists(select id from cl_borrow where user_id = #{userId,jdbcType=BIGINT} and state in('10','12','14','20','22','26','30','31','50','90') )
    </insert>


    <update id="update" parameterType="com.adpanshi.cashloan.com.adpanshi.cashloan.api.core.domain.Borrow">
        update cl_borrow set
            user_id = #{userId,jdbcType=BIGINT},
            order_no = #{orderNo,jdbcType=VARCHAR},
            amount = #{amount,jdbcType=DECIMAL},
            real_amount = #{realAmount,jdbcType=DECIMAL},
            fee = #{fee,jdbcType=DECIMAL},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            time_limit = #{timeLimit,jdbcType=VARCHAR},
            state = #{state,jdbcType=VARCHAR},
            card_id = #{cardId,jdbcType=BIGINT},
            service_fee = #{serviceFee,jdbcType=DECIMAL},
            info_auth_fee = #{infoAuthFee,jdbcType=DECIMAL},
            interest = #{interest,jdbcType=DECIMAL},
          	client = #{client,jdbcType=VARCHAR},
            address = #{address,jdbcType=VARCHAR},
            coordinate = #{coordinate,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            ip = #{ip,jdbcType=VARCHAR},
            audit_process = #{auditProcess,jdbcType=VARCHAR},
            audit_process_time =#{auditProcessTime,jdbcType=TIMESTAMP},
            audit_name=#{auditName,jdbcType=VARCHAR},
            audit_time =#{auditTime,jdbcType=TIMESTAMP},
            borrow_main_id = #{borrowMainId,jdbcType=BIGINT}<!-- @author yecy 20171208-->
        where id = #{id ,jdbcType=BIGINT}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_borrow
          <set>
            <if test="userId != null and userId != '' ">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null and orderNo != '' ">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="amount != null and amount != '' ">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="realAmount != null and realAmount != '' ">
                real_amount = #{realAmount,jdbcType=DECIMAL},
            </if>
            <if test="fee != null and fee != '' ">
                fee = #{fee,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null ">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeLimit != null and timeLimit != '' ">
                time_limit = #{timeLimit,jdbcType=VARCHAR},
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="cardId != null and cardId != '' ">
                card_id = #{cardId,jdbcType=BIGINT},
            </if>
            <if test="serviceFee != null and serviceFee != '' ">
                service_fee = #{serviceFee,jdbcType=DECIMAL},
            </if>
            <if test="infoAuthFee != null and infoAuthFee != '' ">
                info_auth_fee = #{infoAuthFee,jdbcType=DECIMAL},
            </if>
            <if test="interest != null and interest != '' ">
                interest = #{interest,jdbcType=DECIMAL},
            </if>
            <if test="client != null and client != '' ">
                client = #{client,jdbcType=VARCHAR},
            </if>
            <if test="address !='' and address !=null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="coordinate !='' and coordinate !=null">
                coordinate = #{coordinate,jdbcType=VARCHAR},
            </if>
            <if test="remark !=null and remark != ''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
             <if test="ip !=null and ip != ''">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="auditName != null and auditName != '' ">
                auditName = #{auditName,jdbcType=VARCHAR},
            </if>
            <!-- @author yecy 20171208-->
            <if test="borrowMainId !='' and borrowMainId !=null">
                borrow_main_id = #{borrowMainId,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id ,jdbcType=BIGINT}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        where id = #{id,jdbcType=BIGINT}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
    </select>

    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
    </select>

    <select id="listExportModel" resultMap="ManageBorrowExportModel" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
    </select>

    <select id="listAll" resultMap="ClBorrowModel" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <include refid="searchBy"/>
        ORDER BY id DESC
    </select>

    <select id="findBorrow" resultMap="ClBorrowModel" parameterType="java.util.HashMap">
        SELECT cb.*,
		(SELECT card_no FROM cl_bank_card WHERE id = cb.card_id)AS cardNo,
		(SELECT bank FROM cl_bank_card WHERE id = cb.card_id)AS bank
		FROM cl_borrow AS cb
		<!-- WHERE cb.id = #{id,jdbcType=BIGINT} -->
		<include refid="searchBy"/>
    </select>

    <select id="listIndex" resultMap="IndexModel" parameterType="java.util.HashMap">
        SELECT cb.id,cb.create_time AS createTime,cb.amount,
		(SELECT card_no FROM cl_bank_card WHERE id = cb.card_id)AS cardNo,
		(SELECT create_time FROM cl_borrow_progress WHERE state = '30' AND borrow_id = cb.id) AS loanTime
		FROM `cl_borrow` AS cb WHERE state = '30'
		ORDER BY cb.id DESC LIMIT 0,10
    </select>



    <select id="findRepay" resultMap="repayModel" parameterType="java.util.HashMap">
        SELECT cbr.id, cbr.borrow_id AS borrowId,cbr.repay_time,cbr.penalty_amout AS penaltyAmout,cbr.penalty_day AS penaltyDay,
        cb.amount,cb.real_amount,cb.fee,cb.state
		FROM cl_borrow_repay AS cbr,cl_borrow AS cb
		WHERE cbr.borrow_id = cb.id AND cbr.state = '20' AND cb.user_id = #{userId,jdbcType=BIGINT}
		ORDER BY cb.id DESC
    </select>

    <select id="compute" resultMap="repayModel" parameterType="java.util.HashMap">
        SELECT cbr.repay_time,cb.amount,cbr.id AS id
		FROM cl_borrow_repay AS cbr,cl_borrow AS cb
		WHERE cbr.borrow_id = cb.id AND cbr.state = '20'
    </select>

      <!-- 用户借款sql查询条件公共引用 -->
    <sql id="searchModelBy">
        <trim prefix="where" prefixOverrides="and|or">
        	<if test="userId !='' and userId !=null">
                and u.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="realName !='' and realName !=null">
                and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
            </if>
             <if test="phone !='' and phone !=null">
                and u.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            <if test="state != null and state != '' ">
            	and b.state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="blackState != null and blackState != '' ">
                and u.state = #{blackState,jdbcType=VARCHAR}
            </if>
            <if test="stateList !=null">
            	and b.state  in
             	<foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
			    	#{item}
             	</foreach>
            </if>
            <if test="remark != null and remark != ''">
            	and b.remark like concat("%",#{remark,jdbcType=VARCHAR},"%")
            </if>
            <if test="startOrderAuditTime !=null and startOrderAuditTime !=''" >
                and b.audit_time &gt;= #{startOrderAuditTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endOrderAuditTime !=null and endOrderAuditTime !=''">
                and b.audit_time &lt;= #{endOrderAuditTime,jdbcType=TIMESTAMP}
            </if>
            <!-- 订单生成时间(开始时间-结束时间) -->
            <if test="startCreateTime !=null and startCreateTime !=''" >
                and DATE(b.create_time) &gt;= #{startCreateTime,jdbcType=DATE}
            </if>
            <if test="endCreateTime !=null and endCreateTime !=''">
                and DATE(b.create_time) &lt;= #{endCreateTime,jdbcType=DATE}
            </if>
        </trim>
    </sql>

     <resultMap id="userBorrowMap"  extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.ManageBorrowModel">
         <result column="real_name" property="realName" jdbcType="VARCHAR" />
         <result column="phone" property="phone" jdbcType="VARCHAR" />
         <result column="repay_amount" property="repayAmount" jdbcType="DECIMAL" />
         <result column="repay_time" property="repayTime" jdbcType="VARCHAR" />
         <result column="black_reason" property="blackReason" jdbcType="VARCHAR" />
         <result column="audit_name" property="auditName" jdbcType="VARCHAR" />
         <result column="register_client" property="registerClient" jdbcType="VARCHAR" />
         <result column="channel_name" property="channelName" jdbcType="VARCHAR" />
         <result column="channel_code" property="channelCode" jdbcType="VARCHAR" />
         <result column="order_view" property="orderView" jdbcType="VARCHAR"/>
         <result column="sys_user_name" property="sysUserName" jdbcType="VARCHAR"/>
     </resultMap>

    <!-- 为了不影响老的功能新增 -->
    <resultMap id="userBorrowWithRepayMap"  extends="BaseResultMap" type="com.adpanshi.cashloan.api.com.adpanshi.cashloan.api.rule.model.ManageBorrowModel">
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="repay_amount" property="repayAmount" jdbcType="DECIMAL" />
        <result column="repay_time" property="repayTime" jdbcType="VARCHAR" />
        <result column="black_reason" property="blackReason" jdbcType="VARCHAR" />
        <result column="black_state" property="blackState" jdbcType="VARCHAR" />
        <result column="penalty_day" property="penaltyDay" jdbcType="INTEGER" />
        <result column="penalty_amout" property="penaltyAmout" jdbcType="DECIMAL" />
        <result column="real_repayment_amout" property="realRepaymentAmout" jdbcType="DECIMAL" />
    </resultMap>

		<!-- 第一版订单查询语句，注释后期有问题可参考此代码 -->
   <select id="listReview" resultMap="userBorrowMap" parameterType="java.util.HashMap">
		SELECT
		    b.id,u.real_name, u.phone,  b.user_id, b.order_no, b.amount,
		    b.real_amount, b.fee, b.create_time, b.time_limit, b.state, b.card_id,b.audit_name,b.audit_time,
		     b.service_fee, b.info_auth_fee, b.interest, b.client, b.remark, b.audit_process, b.audit_process_time,
            cu.register_client,cc.`name` as channel_name,cc.`code` as channel_code
		FROM
		    cl_borrow b
		    LEFT JOIN cl_user_base_info u ON u.user_id = b.user_id
            LEFT JOIN cl_user cu ON cu.id = b.user_id
            LEFT JOIN cl_channel cc ON cc.id = cu.channel_id
        WHERE 1=1
        <if test="stateList !=null">
            and b.`state` IN
             <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="state != null and state != '' ">
            and b.state = #{state,jdbcType=VARCHAR}
        </if>
        <if test="orderNo !='' and orderNo !=null">
            and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
        </if>
        <if test="realName !='' and realName !=null">
            and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
        </if>
         <if test="phone !='' and phone !=null">
            and u.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
        </if>
        <if test="auditName !='' and auditName !=null">
            and b.audit_name like  concat("%",#{auditName,jdbcType=VARCHAR},"%")
        </if>
        <if test="startCreateTime !=null and startCreateTime !=''" >
            and b.create_time &gt;= #{startCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endCreateTime !=null and endCreateTime !=''">
            and b.create_time &lt;= #{endCreateTime,jdbcType=TIMESTAMP}
        </if>

        <if test="startReviewTime !=null and startReviewTime !=''" >
            and b.audit_time &gt;= #{startReviewTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endReviewTime !=null and endReviewTime !=''">
            and b.audit_time &lt;= #{endReviewTime,jdbcType=TIMESTAMP}
        </if>
       <!--   @remarks: 追加渠道筛选. @date: 20170817 @author:nmnl start-->
        <if test="channelId !=null ">
            and cu.channel_id  = #{channelId,jdbcType=BIGINT}
        </if>
        <if test="registerClient !=null and registerClient !=''">
            and cu.register_client  = #{registerClient,jdbcType=VARCHAR}
        </if>
       <!--   @remarks: 追加渠道筛选. @date: 20170817 @author:nmnl end-->
		ORDER BY  b.state asc , b.create_time desc
	</select> 
	
	<select id="listModel" resultMap="userBorrowMap" parameterType="java.util.HashMap">
		select
			u.real_name,u.phone,u.state black_state,u.black_reason,b.id,b.user_id,b.order_no,b.amount,b.real_amount,b.fee,b.create_time,
			b.time_limit,b.state,b.card_id,b.service_fee,b.info_auth_fee,b.interest,b.client,b.remark,b.audit_process,b.audit_process_time
		from cl_borrow b
		inner join cl_user_base_info u on u.user_id=b.user_id
		<include refid="searchModelBy" />
		ORDER BY b.create_time DESC
	</select>

    <!-- @remarks : 修复机审通过查询不到问题. @date: 20170710 @author: M -->
    <select id="automaticListModel" resultMap="userBorrowMap" parameterType="java.util.HashMap">
        SELECT
        u.real_name,u.phone,u.state black_state,u.black_reason,b.id,b.user_id,b.order_no,b.amount,b.real_amount,b.fee,b.create_time,
                b.time_limit,b.state,b.card_id,b.service_fee,b.info_auth_fee,b.interest,b.client,b.remark,b.audit_process,b.audit_process_time
        FROM
            cl_borrow b ,
            cl_user_base_info u ,
            cl_borrow_progress bp
        WHERE
            u.user_id = b.user_id
        AND bp.borrow_id = b.id
        AND bp.user_id = b.user_id
        <if test="state != null and state != '' ">
            and bp.state = #{state,jdbcType=VARCHAR}
        </if>
        <if test="orderNo !='' and orderNo !=null">
            and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
        </if>
        <if test="realName !='' and realName !=null">
            and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
        </if>
        ORDER BY b.create_time DESC;
    </select>


	<select id="listBorrowModel" resultMap="userBorrowMap"	parameterType="java.util.HashMap">
		select
			u.real_name,u.phone,b.id,b.user_id,b.order_no,b.amount,b.real_amount,b.fee,b.create_time,b.time_limit,b.state,b.borrow_main_id,
			l.amount+IFNULL(r.penalty_amout,0)  as repay_amount,l.repay_time,
            l.amount+IFNULL(l.penalty_amout,0) as real_repayment_amout
		from cl_borrow b
		left join cl_user_base_info u on u.user_id=b.user_id 
		left join cl_borrow_repay_log l on l.borrow_id=b.id
        left join cl_borrow_repay r on r.borrow_id = b.id
		<include refid="searchModelBy" />
		ORDER BY b.create_time DESC
        <if test="totalCount !='' and totalCount !=null">
            limit #{totalCount,jdbcType = BIGINT}
        </if>
	</select>

    <!-- 人工复审时查看申请人所有的借款订单使用这个-->
    <select id="listBorrowModelForPersonCheck" resultMap="userBorrowWithRepayMap"	parameterType="java.util.HashMap">
        select
        u.real_name,u.phone,b.id,b.user_id,b.order_no,b.amount,b.real_amount,b.fee,b.create_time,b.time_limit,b.state,b.audit_name,/*zy*/
		l.amount+IFNULL(r.penalty_amout,0) as repay_amount,l.repay_time,
		IFNULL(r.penalty_day,0) as penalty_day,
		IFNULL(r.penalty_amout,0) as penalty_amout,
		l.amount+IFNULL(l.penalty_amout,0) as real_repayment_amout
        from (select * from  cl_borrow cb where cb.user_id =  #{userId,jdbcType=BIGINT}) b
        left join cl_user_base_info u on u.user_id=b.user_id
        left join cl_borrow_repay_log l on l.borrow_id=b.id
        left join cl_borrow_repay r on r.borrow_id = b.id
        ORDER BY b.create_time DESC
    </select>
    
	<select id="seleteUser" resultMap="ManageBorrowTestModel" parameterType="java.util.HashMap">
        SELECT cu.id AS userId,cu.login_name AS phone,cbc.id AS cardId,cbc.card_no AS cardNo FROM cl_bank_card AS cbc 
		LEFT JOIN `cl_user` AS cu ON cbc.user_id = cu.id WHERE cu.id IN (SELECT cua.user_id FROM cl_user_auth AS cua
		WHERE cua.id_state = '30' AND cua.contact_state = '30' AND cua.bank_card_state = '30' AND cua.phone_state = '30')
	</select>
	
	<update id="updateState">
    	update cl_borrow set state = #{state,jdbcType=VARCHAR} where id = #{id ,jdbcType=BIGINT} 
    </update>
    
    <!-- 我的信审订单信息查询cyh -->
     <select id="listRevieworder" resultMap="userBorrowMap" parameterType="java.util.HashMap">
		SELECT
		    b.id,u.real_name, u.phone,  b.user_id, b.order_no, b.amount,
		    b.real_amount, b.fee, b.create_time, b.time_limit, e.`order_status` state, 
		    	b.card_id,b.audit_name,b.audit_time,
		     b.service_fee, b.info_auth_fee, b.interest, b.client, b.remark, b.audit_process, b.audit_process_time,
            cu.register_client,cc.`name` as channel_name,cc.`code` as channel_code,e.order_view,e.sys_user_name 
		FROM
		    cl_borrow_user_examine e 
			LEFT JOIN cl_borrow b ON b.id = e.borrow_id 
 			LEFT JOIN cl_user_base_info u ON u.user_id = b.user_id 
            LEFT JOIN cl_user cu ON cu.id = b.user_id 
            LEFT JOIN cl_channel cc ON cc.id = cu.channel_id 
        WHERE 1=1
        <if test="stateList !=null">
            and e.`order_status` IN
             <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="state != null and state != '' ">
            and e.order_status = #{state,jdbcType=VARCHAR}
        </if>
        <if test="orderNo !='' and orderNo !=null">
            and e.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
        </if>
        <if test="realName !='' and realName !=null">
            and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
        </if>
         <if test="phone !='' and phone !=null">
            and u.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
        </if>
        <if test="auditName !='' and auditName !=null">
            and e.audit_name like  concat("%",#{auditName,jdbcType=VARCHAR},"%") 
        </if>
        <!--start-->
      	<if test="startCreateTime !=null and startCreateTime !=''" >
            and b.create_time &gt;= #{startCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endCreateTime !=null and endCreateTime !=''">
            and b.create_time &lt;= #{endCreateTime,jdbcType=TIMESTAMP}
        </if>

        <if test="startReviewTime !=null and startReviewTime !=''" >
            and b.audit_time &gt;= #{startReviewTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endReviewTime !=null and endReviewTime !=''">
            and b.audit_time &lt;= #{endReviewTime,jdbcType=TIMESTAMP}
        </if>
        <!--end-->
        <!--@remarks: 追加渠道筛选. @date: 20170817 @author:nmnl start -->
        <if test="channelId !=null ">
            and cu.channel_id  = #{channelId,jdbcType=BIGINT}
        </if>
        <if test="registerClient !=null and registerClient !=''">
            and cu.register_client  = #{registerClient,jdbcType=VARCHAR}
        </if>
        <if test="sysUserId != null and sysUserId != ''">
        	and e.sys_user_id = #{sysUserId,jdbcType=BIGINT}
        </if>
        <!--@remarks: 追加渠道筛选. @date: 20170817 @author:nmnl end-->
		ORDER BY  e.order_status asc ,  b.create_time desc 
	</select>
	
	<!-- 订单挂起状态备注修改 -->
	<update id="updateBorrowRemark"  parameterType="java.util.HashMap">
    	  update cl_borrow 
    	 	 set remark = #{remark,jdbcType=VARCHAR}  
    	  where id = #{id ,jdbcType=BIGINT} AND state = '22'
    </update>
    
    <!-- 待人工复审订单查询 -->
     <select id="listReview1" resultMap="userBorrowMap" parameterType="java.util.HashMap">
     	SELECT t.* 
     	FROM 
		(SELECT
		    b.id,u.real_name, u.phone,  b.user_id, b.order_no, b.amount,
		    b.real_amount, b.fee, b.create_time, b.time_limit, b.state, b.card_id,b.audit_name,b.audit_time,
		     b.service_fee, b.info_auth_fee, b.interest, b.client, b.remark, b.audit_process, b.audit_process_time,
            cu.register_client,cc.`name` as channel_name,cc.`code` as channel_code
		FROM
		    cl_borrow b
		    LEFT JOIN cl_user_base_info u ON u.user_id = b.user_id
            LEFT JOIN cl_user cu ON cu.id = b.user_id
            LEFT JOIN cl_channel cc ON cc.id = cu.channel_id 
            LEFT JOIN cl_borrow_user_examine e ON b.id =e.borrow_id 
        WHERE 1=1
        <if test="stateList !=null">
            and b.`state` IN
             <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="state != null and state != '' ">
            and b.state = #{state,jdbcType=VARCHAR}
        </if>
        <if test="orderNo !='' and orderNo !=null">
            and b.order_no like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
        </if>
        <if test="realName !='' and realName !=null">
            and u.real_name like  concat("%",#{realName,jdbcType=VARCHAR},"%")
        </if>
         <if test="phone !='' and phone !=null">
            and u.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
        </if>
        <if test="auditName !='' and auditName !=null">
            and b.audit_name like  concat("%",#{auditName,jdbcType=VARCHAR},"%")
        </if>
        <if test="startCreateTime !=null and startCreateTime !=''" >
            and b.create_time &gt;= #{startCreateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endCreateTime !=null and endCreateTime !=''">
            and b.create_time &lt;= #{endCreateTime,jdbcType=TIMESTAMP}
        </if>

        <if test="startReviewTime !=null and startReviewTime !=''" >
            and b.audit_time &gt;= #{startReviewTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endReviewTime !=null and endReviewTime !=''">
            and b.audit_time &lt;= #{endReviewTime,jdbcType=TIMESTAMP}
        </if>
       <!--   @remarks: 追加渠道筛选. @date: 20170817 @author:nmnl start-->
        <if test="channelId !=null ">
            and cu.channel_id  = #{channelId,jdbcType=BIGINT}
        </if>
        <if test="registerClient !=null and registerClient !=''">
            and cu.register_client  = #{registerClient,jdbcType=VARCHAR}
        </if>
       <!--   @remarks: 追加渠道筛选. @date: 20170817 @author:nmnl end-->
		ORDER BY  b.state asc , b.create_time desc) t 
		where t.id NOT IN( 
		select p.borrow_id from cl_borrow_user_examine p where p.order_status=#{orderStatus,jdbcType=VARCHAR})  
		
	</select> 
	
	<select id="updateOrderStateInfo"  parameterType = "java.util.HashMap">
		update cl_borrow set audit_process = #{auditProcess,jdbcType=VARCHAR} where id = #{id,jdbcType=BIGINT}
	</select>

    <select id="countBorrow" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT count(*) AS count
        FROM `cl_borrow`
        WHERE state IN ('20','26','30','40') AND user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="findRepayBorrow" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        WHERE user_id = #{userId,jdbcType=BIGINT}
        ORDER BY id DESC LIMIT 0,1
    </select>

    <select id="findRepayBorrowMain" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow_main
        WHERE user_id = #{userId,jdbcType=BIGINT}
        ORDER BY id DESC LIMIT 0,1
    </select>

    <select id="findByUserIdAndState" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userId !='' and userId !=null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="stateList !=null">
                and state  in
                <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        order by id desc limit 0,1
    </select>

    <insert id="saveAll" parameterType="com.adpanshi.cashloan.com.adpanshi.cashloan.api.core.domain.Borrow" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        cl_borrow(user_id,order_no,amount,real_amount,fee,create_time,time_limit,state,card_id,service_fee,info_auth_fee,interest,client,address,coordinate,remark,ip,borrow_main_id) values
        <foreach collection="list" item="item" separator=",">
            (#{item.userId,jdbcType=BIGINT},
            #{item.orderNo,jdbcType=VARCHAR},
            #{item.amount,jdbcType=DECIMAL},
            #{item.realAmount,jdbcType=DECIMAL},
            #{item.fee,jdbcType=DECIMAL},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.timeLimit,jdbcType=VARCHAR},
            #{item.state,jdbcType=VARCHAR},
            #{item.cardId,jdbcType=BIGINT},
            #{item.serviceFee,jdbcType=DECIMAL},
            #{item.infoAuthFee,jdbcType=DECIMAL},
            #{item.interest,jdbcType=DECIMAL},
            #{item.client,jdbcType=VARCHAR},
            #{item.address,jdbcType=VARCHAR},
            #{item.coordinate,jdbcType=VARCHAR},
            #{item.remark,jdbcType=VARCHAR},
            #{item.ip,jdbcType=VARCHAR},
            #{item.borrowMainId,jdbcType=BIGINT})
        </foreach>
    </insert>
    <!-- 根据userId、borrowMainId、state统计 -->
    <select id="queryCount" resultType="java.lang.Integer">
		SELECT COUNT(t.id) FROM cl_borrow t WHERE t.user_id=#{userId} AND t.borrow_main_id=#{borrowMainId} AND t.state=#{state}
	</select>

	<!-- (分期还款明细列表)  根据给定userId及borrowMainId 查询还款明细列表 -->
	<select id="queryRepaymentsByUserIdWithBorMainId" resultMap="RepaymentMap">
		SELECT
				DATE_FORMAT(repayLog.repay_time,'%Y-%m-%d %H:%i:%S') AS create_time,
				t.order_no,
				(t.fee-IFNULL(repayLog.fee,0)) AS interests,
				t.state,
				t.id,
				repayLog.repay_way,
				t.amount AS amount,
				IFNULL(repay.penalty_amout,0) AS penaltyAmout,
				IFNULL(repayLog.fee,0) AS fee
		 FROM cl_borrow t
			  LEFT JOIN cl_borrow_repay repay ON t.id=repay.borrow_id AND t.user_id=repay.user_id
			  LEFT JOIN cl_borrow_repay_log repayLog ON t.user_id=repayLog.user_id AND t.id=repayLog.borrow_id
		WHERE t.user_id=#{userId} AND t.borrow_main_id=#{borrowMainId} AND t.state=40 GROUP BY t.id
    </select>


    <select id="findBorrowsByOrderNo"  resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_borrow
        <trim prefix="where" prefixOverrides="and|or">
            <if test="list != null">
                `order_no` in
                <foreach item="item" collection="list" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>

    <!-- (分期还款-还款计划列表)  根据给定userId及borrowMainId、state 查询还款计划列表 -->
    <select id="queryRepaymentPlanByUserIdWithBorMainId" resultMap="StaginRepaymentPlanMap">
    	SELECT 
				DATE_FORMAT(repay.repay_time,'%Y-%m-%d') AS repay_time,  
				t.order_no,
				t.fee AS interests,
				t.amount,
				t.state,
				t.id AS borrow_id,
				IFNULL(repay.penalty_amout,0) AS penaltyAmout,
				IFNULL(repayLog.fee,0) AS fee,
				card.bank,
				card.card_no
		 FROM cl_borrow t 
			  LEFT JOIN cl_borrow_repay repay ON t.id=repay.borrow_id AND t.user_id=repay.user_id
			  LEFT JOIN cl_borrow_repay_log repayLog ON t.user_id=repayLog.user_id AND t.id=repayLog.borrow_id
			  LEFT JOIN cl_bank_card card ON t.user_id=card.user_id AND t.card_id=card.id
		WHERE t.user_id=#{userId} AND t.borrow_main_id=#{borrowMainId}
    </select>

	<!-- 根据给定订单号集合与userId、状态(可选项)、查询订单号 -->
	<select id="queryBorrowByOrderNosWithUserId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
   		  from cl_borrow where user_id=#{userId} AND order_no IN
   		  <foreach item="item" index="index" collection="orderNoList" open="(" separator="," close=")">
   		  		#{item}
   		  </foreach>
   		  <if test="@OGNL@isNotEmpty(state)">
   		  		AND state=#{state}
   		  </if>
    </select>

    <select id="queryBorrowPenaltyByBorrowId" resultType="java.util.HashMap" parameterType="java.util.HashMap">
        select b.state as state, r.penalty_amout as penaltyAmount, r.amount+r.penalty_amout as amount
        from cl_borrow b, cl_borrow_repay r
        where b.id = r.borrow_id and b.borrow_main_id=#{borrowMainId}
    </select>

</mapper>
